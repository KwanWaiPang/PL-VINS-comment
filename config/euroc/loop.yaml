%YAML:1.0

#common parameters
imu_topic: "/dvs/imu"
image_topic: "/dvs/image_raw"
# output_path: "/home/healer/catkin_PLVINS/src/PL-VINS/Trajactory/"         # vins outputs will be wrttento vins_folder_path + output_path

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 346
image_height: 260
distortion_parameters:
   k1: -0.027576733308582076
   k2: -0.006593578674675004
   p1: 0.0008566938165177085
   p2: -0.00030899587045247486
projection_parameters:
   fx: 172.98992850734132
   fy: 172.98303181090185 
   cx: 163.33639726024606 
   cy: 134.99537889030861

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9999711474430529, 0.0013817010649267755, -0.007469617365767657, 
         -0.0014085305353606873, 0.9999925720306121, -0.00358774655345255, 
          0.007464604688444933, 0.0035981642219379494, 0.9999656658561218]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 0.00018050225881571712,-0.004316353415695194, -0.027547385763471585]

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 10            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.06  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

acc_n: 2.0000e-2 #0.1     #3.7863819264639269e-02         # accelerometer measurement noise standard deviation.
gyr_n: 1.6968e-03 #0.05    #3.1745424413195111e-03         # gyroscope measurement noise standard deviation.    
acc_w: 3.0000e-3 #0.002   #6.8693717455312715e-04         # accelerometer bias random work noise standard deviation. 
gyr_w: 1.9393e-05 #4.0e-05 #3.3271308846999896e-05         # gyroscope bias random work noise standard deviation.    
g_norm: 9.805         # gravity magnitude

#loop closure parameters
loop_closure: 0                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0          # useful in real-time and large project
pose_graph_save_path: "/home/healer/catkin_PLVINS/src/PL-VINS/Trajactory/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.005532805640108713            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0               # unit: s. rolling shutter read out time per frame (from data sheet). 

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 1        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ

